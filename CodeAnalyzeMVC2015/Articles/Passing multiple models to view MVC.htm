<div style="font-size:16px;width:100%;font-family:Calibri">

    <p style="width:80%">
    There are many ways of using multiple models in a view, most frequently used are given below:
</p>
<p style="width:80%">
    ViewData<br />
    ViewBag<br />
    TempData<br />
    ViewModel
</p>

    <p><b>By ViewData</b></p>
    <p>Controller</p>
    <pre class="brush: csharp">
        public ActionResult ViewDataDemo()
        {
            ViewData["Departments"] = repository.GetDepartments();
            ViewData["Employees"] = repository.GetEmployees();
            ViewData["Managers"] = repository.GetManagers();
            return View();
        }    
    </pre>
    <p>View</p>
    <pre class="brush: csharp">
       @foreach (var item in ViewData["Departments"] as List<MultipleModelViewData.Models.Departments>)
        {        
                @item.DepartmentName           
        }
    </pre>


    <p><b>By ViewBag</b></p>
    <p>Controller</p>
    <pre class="brush: csharp">
        public ActionResult ViewBagDemo()
        {
            ViewBag["Departments"] = repository.GetDepartments();
            ViewBag["Employees"] = repository.GetEmployees();
            ViewBag["Managers"] = repository.GetManagers();
            return View();
        }     
    </pre>
    <p>View</p>
    <pre class="brush: csharp">
        @foreach (var item in ViewBag["Departments"] as List
                                        <MultipleModelViewBag.Models.Departments>)
                {        
                     @item.DepartmentName   
                }
    </pre>
    
        
    <p><b>By TempData</b></p>
    <p>Controller</p>
    <pre class="brush: csharp">
        public ActionResult ViewDataDemo()
        {
            TempData["Departments"] = repository.GetDepartments();
            TempData["Employees"] = repository.GetEmployees();
            TempData["Managers"] = repository.GetManagers();
            return View();
        }    
    </pre>
    <p>View</p>
    <pre class="brush: csharp">
        @foreach (var item in TempData["Departments"] as List
                                        <MultipleModelTempData.Models.Departments>)
                {         
                     @item.DepartmentName           
                }  
    </pre>


    <p><b>By ViewModel</b></p>
    <p>ViewModel</p>
    <pre class="brush: csharp">
        public class ViewModelDemoVM
        {
            public List<Departments> allDepartments { get; set; }
            public List<Employee> allEmployees { get; set; }
            public List<Managers> allManagers { get; set; }
        }   
    </pre>
    <p>Controller</p>
    <pre class="brush: csharp">
        public ActionResult ViewModelDemo()
        {
            ViewModelDemoVM vm = new ViewModelDemoVM();
            vm.allDepartments = repository.GetDepartments();
            vm.allEmployees = repository.GetEmployees();
            vm.allManagers = repository.GetManagers();
            return View(vm);
        } 
    </pre>
    <p>View</p>
    <pre class="brush: csharp">
        @foreach (var item in Model.allDepartments)
        {        
            <option>@item.DepartmentName</option>           
        } 
    </pre>
  
    <br />
    <br />




</div>

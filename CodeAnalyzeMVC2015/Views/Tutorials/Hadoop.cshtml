@{
    ViewBag.Title = "Hadoop";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .auto-style3 {
        font-size: 20px;
        color: #00CC00;
    }

    .auto-style4 {
        font-size: 16px;
    }
</style>

<p style="font-size:24px;font-weight:bold;color:Black">Hadoop</p> <br />


<pre style="background-color:white; font-family:Calibri; font-size:14px;">
<strong><span class="auto-style3">Hadoop commands</span></strong>
        
Usage: hadoop [--config confdir] [COMMAND] [GENERIC_OPTIONS] [COMMAND_OPTIONS]
Hadoop has an option parsing framework that employs parsing generic options as well as running classes.
--config confdir	Overwrites the default Configuration directory. Default is $HADOOP_HOME/conf.
The following options are supported by dfsadmin, fs, fsck, job and fetchdt.  Applications should implement Tool to support GenericOptions.
-conf <configuration file>	Specify an application configuration file.
-D <property>=<value>	Use value for given property.
-jt <local> or <jobtracker:port>	Specify a job tracker. Applies only to job.
-files 	Specify comma separated files to be copied to the map reduce cluster. Applies only to job.
-libjars 	Specify comma separated jar files to include in the classpath. Applies only to job.
-archives 	Specify comma separated archives to be unarchived on the compute machines. Applies only to job.
<strong><span class="auto-style4"><span class="auto-style4">archive</span></strong>
Creates a hadoop archive. More information can be found at Hadoop Archives.
Usage: hadoop archive -archiveName NAME <src>* <dest>
-archiveName NAME	Name of the archive to be created.
src	Filesystem pathnames which work as usual with regular expressions.
dest	Destination directory which would contain the archive.
Usage: hadoop distcp <srcurl> <desturl>
srcurl	Source Url
desturl	Destination Url
<strong><span class="auto-style4">fs
</strong>Usage: hadoop fs [GENERIC_OPTIONS] [COMMAND_OPTIONS]
Runs a generic filesystem user client.
<strong><span class="auto-style4">fsck</strong>
Runs a HDFS filesystem checking utility. See fsck for more info.
Usage: hadoop fsck [GENERIC_OPTIONS] <path> [-move | -delete | -openforwrite] [-files [-blocks [-locations | -racks]]]
path		Start checking from this path.
-move		Move corrupted files to /lost+found
-delete		Delete corrupted files.
-openforwrite	Print out files opened for write.
-files		Print out files being checked.
-blocks		Print out block report.
-locations		Print out locations for every block.
-racks		Print out network topology for data-node locations.
<strong><span class="auto-style4">fetchdt
</strong>Gets Delegation Token from a NameNode. See fetchdt for more info.
Usage: hadoop fetchdt [GENERIC_OPTIONS] [--webservice <namenode_http_addr>] <path>
fileName			File name to store the token into.
--webservice https_address	use http protocol instead of RPC
<strong><span class="auto-style4">jar</strong>
Runs a jar file. Users can bundle their Map Reduce code in a jar file and execute it using this command.
Usage: hadoop jar <jar> [mainClass] args...
<strong><span class="auto-style4">job
</strong>Command to interact with Map Reduce Jobs.
Usage: hadoop job [GENERIC_OPTIONS] [-submit <job-file>] | [-status <job-id>] | [-counter <job-id> <group-name> <counter-name>] | [-kill <job-id>] | [-events <job-id> <from-event-#> <#-of-events>] | [-history [all] <jobOutputDir>] | [-list [all]] | [-kill-task <task-id>] | [-fail-task <task-id>] | [-set-priority <job-id> <priority>]
-submit job-file			Submits the job.
-status job-id			Prints the map and reduce completion percentage and all job counters.
-counter job-idgroup-namecounter-name	Prints the counter value.
-kill job-id				Kills the job.
-events job-id from-event-# #-of-events	Prints the events' details received by jobtracker for the given range.
-history [all]jobOutputDir		Prints job details, failed and killed tip details. More details about the job such as successful tasks and task attempts made for each task can be viewed by specifying the [all] option.
-list [all]				Displays jobs which are yet to complete. -list all displays all jobs.
-kill-task task-id			Kills the task. Killed tasks are NOT counted against failed attempts.
-fail-task task-id			Fails the task. Failed tasks are counted against failed attempts.
-set-priority job-idpriority		Changes the priority of the job. Allowed priority values are VERY_HIGH, HIGH, NORMAL, LOW, VERY_LOW
<strong><span class="auto-style4">pipes</strong>
Runs a pipes job.
Usage: hadoop pipes [-conf <path>] [-jobconf <key = value>, <key = value>, ...] [-input <path>] [-output <path>] [-jar <jar file>] [-inputformat <class>] [-map <class>] [-partitioner <class>] [-reduce <class>] [-writer <class>] [-program <executable>] [-reduces <num>]
-conf path				Configuration for job
-jobconf key=value, key=value, ...		Add/override configuration for job
-input path				Input directory
-output path			Output directory
-jar jar file				Jar filename
-inputformat class			InputFormat class
-map class				Java Map class
-partitioner class			Java Partitioner
-reduce class			Java Reduce class
-writer class			Java RecordWriter
-program executable			Executable URI
-reduces num			Number of reduces
<strong><span class="auto-style4">queue</strong>
command to interact and view Job Queue information
Usage: hadoop queue [-list] | [-info <job-queue-name> [-showJobs]] | [-showacls]
-list				Gets list of Job Queues configured in the system. Along with scheduling information associated with the job queues.
-info job-queue-name [-showJobs]		Displays the job queue information and associated scheduling information of particular job queue. If -showJobs options is present a list of jobs submitted to the particular job queue is displayed.
-showacls				Displays the queue name and associated queue operations allowed for the current user. The list consists of only those queues to which the user has access.
<strong><span class="auto-style4">version</strong>
Prints the version.
Usage: hadoop version
<strong><span class="auto-style4">CLASSNAME
</strong>hadoop script can be used to invoke any class.
Usage: hadoop CLASSNAME
Runs the class named CLASSNAME.
<strong><span class="auto-style4">classpath</strong>
Prints the class path needed to get the Hadoop jar and the required libraries.
Usage: hadoop classpath
Administration Commands
Commands useful for administrators of a hadoop cluster.
<strong><span class="auto-style4">balancer</strong>
Runs a cluster balancing utility. An administrator can simply press Ctrl-C to stop the rebalancing process. SeeRebalancer for more details.
Usage: hadoop balancer [-threshold <threshold>]
-threshold threshold	Percentage of disk capacity. This overwrites the default threshold.
<strong><span class="auto-style4">daemonlog
</strong>Get/Set the log level for each daemon.
Usage: hadoop daemonlog -getlevel <host:port> <name> Usage: hadoop daemonlog -setlevel <host:port> <name> <level>
-getlevel host:portname	Prints the log level of the daemon running at host:port. This command internally connects to http://host:port/logLevel?log=name
-setlevel host:portname level	Sets the log level of the daemon running at host:port. This command internally connects to http://host:port/logLevel?log=name
<strong><span class="auto-style4">datanode</strong>
Runs a HDFS datanode.
Usage: hadoop datanode [-rollback]
COMMAND_OPTION	Description
-rollback	Rollsback the datanode to the previous version. This should be used after stopping the datanode and distributing the old hadoop version.
<strong><span class="auto-style4">dfsadmin</strong>
Runs a HDFS dfsadmin client.
Usage: hadoop dfsadmin [GENERIC_OPTIONS] [-report] [-safemode enter | leave | get | wait] [-refreshNodes] [-finalizeUpgrade] [-upgradeProgress status | details | force] [-metasave filename] [-setQuota <quota> <dirname>...<dirname>] [-clrQuota <dirname>...<dirname>] [-restoreFailedStorage true|false|check] [-help [cmd]]
-report	Reports basic filesystem information and statistics.
-safemode enter / leave / get / wait	Safe mode maintenance command. Safe mode is a Namenode state in which it  
1. does not accept changes to the name space (read-only)  
2. does not replicate or delete blocks.  
Safe mode is entered automatically at Namenode startup, and leaves safe mode automatically when the configured minimum percentage of blocks satisfies the minimum replication condition. Safe mode can also be entered manually, but then it can only be turned off manually as well.
-refreshNodes			Re-read the hosts and exclude files to update the set of Datanodes that are allowed to connect to the Namenode and those that should be decommissioned or recommissioned.
-finalizeUpgrade			Finalize upgrade of HDFS. Datanodes delete their previous version working directories, followed by Namenode doing the same. This completes the upgrade process.
-upgradeProgress status / details / force	Request current distributed upgrade status, a detailed status or force the upgrade to proceed.
-metasave filename			Save Namenode's primary data structures to filename in the directory specified by hadoop.log.dir property. filename is overwritten if it exists. filename will contain one line for each of the following 
1. Datanodes heart beating with Namenode 
2. Blocks waiting to be replicated 
3. Blocks currrently being replicated 
4. Blocks waiting to be deleted 
-setQuota quotadirname...dirname	Set the quota quota for each directory dirname. The directory quota is a long integer that puts a hard limit on the number of names in the directory tree. Best effort for the directory, with faults reported if  
1. N is not a positive integer, or  
2. user is not an administrator, or  
3. the directory does not exist or is a file, or  
4. the directory would immediately exceed the new quota.  
-clrQuotadirname...dirname		Clear the quota for each directory dirname. Best effort for the directory. with fault reported if  
1. the directory does not exist or is a file, or  
2. user is not an administrator. It does not fault if the directory has no quota.
-restoreFailedStorage true / false / check	This option will turn on/off automatic attempt to restore failed storage replicas. If a failed storage becomes available again the system will attempt to restore edits and/or fsimage during checkpoint. 'check' option will return current setting.
-help [cmd]				Displays help for the given command or all commands if none is specified.
<strong><span class="auto-style4">mradmin</strong>
Runs MR admin client
Usage: hadoop mradmin [ GENERIC_OPTIONS ] [-refreshQueueAcls]
-refreshQueueAcls	Refresh the queue acls used by hadoop, to check access during submissions and administration of the job by the user. The properties present in mapred-queue-acls.xml is reloaded by the queue manager.
<strong><span class="auto-style4">jobtracker</strong>
Runs the MapReduce job Tracker node.
Usage: hadoop jobtracker [-dumpConfiguration]
-dumpConfiguration	Dumps the configuration used by the JobTracker alongwith queue configuration in JSON format into Standard output used by the jobtracker and exits.
<strong><span class="auto-style4">namenode</strong>
Runs the namenode. More info about the upgrade, rollback and finalize is at Upgrade Rollback.
Usage: hadoop namenode [-format] | [-upgrade] | [-rollback] | [-finalize] | [-importCheckpoint]
-format		Formats the namenode. It starts the namenode, formats it and then shut it down.
-upgrade		Namenode should be started with upgrade option after the distribution of new hadoop version.
-rollback		Rollsback the namenode to the previous version. This should be used after stopping the cluster and distributing the old hadoop version.
-finalize		Finalize will remove the previous state of the files system. Recent upgrade will become permanent. Rollback option will not be available anymore. After finalization it shuts the namenode down.
-importCheckpoint	Loads image from a checkpoint directory and save it into the current one. Checkpoint dir is read from property fs.checkpoint.dir
<strong><span class="auto-style4">secondarynamenode</strong>
Runs the HDFS secondary namenode. See Secondary Namenode for more info.
Usage: hadoop secondarynamenode [-checkpoint [force]] | [-geteditsize]
-checkpoint [-force]	Checkpoints the Secondary namenode if EditLog size >= fs.checkpoint.size. If -force is used, checkpoint irrespective of EditLog size.
-geteditsize	Prints the EditLog size.
<strong><span class="auto-style3">HDFS commands </span></strong>
    
Usage: hdfs [SHELL_OPTIONS] COMMAND [GENERIC_OPTIONS] [COMMAND_OPTIONS]
Hadoop has an option parsing framework that employs parsing generic options as well as running classes.
--config
--loglevel	The common set of shell options. These are documented on the Commands Manual page.
<strong><span class="auto-style4">classpath</strong>
Usage: hdfs classpath
<strong><span class="auto-style4">dfs</strong>
Usage: hdfs dfs [COMMAND [COMMAND_OPTIONS]]
<strong><span class="auto-style4">fetchdt</strong>
Usage: hdfs fetchdt [--webservice <namenode_http_addr>] <path>
--webservice https_address	use http protocol instead of RPC
fileName			File name to store the token into.
<strong><span class="auto-style4">fsck</strong>
Usage:
   hdfs fsck <path>
          [-list-corruptfileblocks |
          [-move | -delete | -openforwrite]
          [-files [-blocks [-locations | -racks]]]
          [-includeSnapshots]
path		Start checking from this path.
-delete		Delete corrupted files.
-files		Print out files being checked.
-files -blocks	Print out the block report
-files -blocks -locations	Print out locations for every block.
-files -blocks -racks	Print out network topology for data-node locations.
-includeSnapshots	Include snapshot data if the given path indicates a snapshottable directory or there are snapshottable directories under it.
-list-corruptfileblocks	Print out list of missing blocks and files they belong to.
-move		Move corrupted files to /lost+found.
-openforwrite	Print out files opened for write.
<strong><span class="auto-style4">getconf</strong>
Usage:
   hdfs getconf -namenodes
   hdfs getconf -secondaryNameNodes
   hdfs getconf -backupNodes
   hdfs getconf -includeFile
   hdfs getconf -excludeFile
   hdfs getconf -nnRpcAddresses
   hdfs getconf -confKey [key]
-namenodes		gets list of namenodes in the cluster.
-secondaryNameNodes	gets list of secondary namenodes in the cluster.
-backupNodes		gets list of backup nodes in the cluster.
-includeFile			gets the include file path that defines the datanodes that can join the cluster.
-excludeFile		gets the exclude file path that defines the datanodes that need to decommissioned.
-nnRpcAddresses		gets the namenode rpc addresses
-confKey [key]		gets a specific key from the configuration
<strong><span class="auto-style4">groups</strong>
Usage: hdfs groups [username ...]
<strong><span class="auto-style4">lsSnapshottableDir
</strong>Usage: hdfs lsSnapshottableDir [-help]
-help	print help
Get the list of snapshottable directories. When this is run as a super user, it returns all snapshottable directories. Otherwise it returns those directories that are owned by the current user.
<strong><span class="auto-style4">jmxget
</strong>Usage: hdfs jmxget [-localVM ConnectorURL | -port port | -server mbeanserver | -service service]
-help			print help
-localVM ConnectorURL	connect to the VM on the same machine
-port mbean server port	specify mbean server port, if missing it will try to connect to MBean Server in the same VM
-service			specify jmx service, either DataNode or NameNode, the default
<strong><span class="auto-style4">oev</strong>
Usage: hdfs oev [OPTIONS] -i INPUT_FILE -o OUTPUT_FILE
-i,--inputFile arg	edits file to process, xml (case insensitive) extension means XML format, any other filename means binary format
-o,--outputFile arg	Name of output file. If the specified file exists, it will be overwritten, format of the file is determined by -p option
Optional:
-f,--fix-txids	Renumber the transaction IDs in the input, so that there are no gaps or invalid transaction IDs.
-h,--help	Display usage information and exit
-r,--ecover	When reading binary edit logs, use recovery mode. This will give you the chance to skip corrupt parts of the edit log.
-p,--processor arg	Select which type of processor to apply against image file, currently supported processors are: binary (native binary format that Hadoop uses), xml (default, XML format), stats (prints statistics about edits file)
-v,--verbose	More verbose output, prints the input and output filenames, for processors that write to a file, also output to screen. On large image files this will dramatically increase processing time (default is false).
<strong><span class="auto-style4">oiv</strong>
Usage: hdfs oiv [OPTIONS] -i INPUT_FILE
-i,--inputFile arg	edits file to process, xml (case insensitive) extension means XML format, any other filename means binary format
Optional command line arguments:
-h,--help		Display usage information and exit
-o,--outputFile arg	Name of output file. If the specified file exists, it will be overwritten, format of the file is determined by -p option
-p,--processor arg	Select which type of processor to apply against image file, currently supported processors are: binary (native binary format that Hadoop uses), xml (default, XML format), stats (prints statistics about edits file)
<strong><span class="auto-style4">oiv_legacy</strong>
Usage: hdfs oiv_legacy [OPTIONS] -i INPUT_FILE -o OUTPUT_FILE
-h,--help		Display usage information and exit
-i,--inputFile arg	edits file to process, xml (case insensitive) extension means XML format, any other filename means binary format
-o,--outputFile arg	Name of output file. If the specified file exists, it will be overwritten, format of the file is determined by -p option
<strong><span class="auto-style4">snapshotDiff</strong>
Usage: hdfs snapshotDiff <path> <fromSnapshot> <toSnapshot>
<strong><span class="auto-style4">version
</strong>Usage: hdfs version
Prints the version.
<strong><span class="auto-style4">balancer</strong>
Usage:
    hdfs balancer
          [-threshold <threshold>]
          [-policy <policy>]
          [-exclude [-f <hosts-file> | <comma-separated list of hosts>]]
          [-include [-f <hosts-file> | <comma-separated list of hosts>]]
          [-idleiterations <idleiterations>]
-policy <policy>	datanode (default): Cluster is balanced if each datanode is balanced.
blockpool: Cluster is balanced if each block pool in each datanode is balanced.
-threshold <threshold>		Percentage of disk capacity. This overwrites the default threshold.
-exclude -f <hosts-file> | <comma-separated list of hosts>	Excludes the specified datanodes from being balanced by the balancer.
-include -f <hosts-file> | <comma-separated list of hosts>	Includes only the specified datanodes to be balanced by the balancer.
-idleiterations <iterations>	Maximum number of idle iterations before exit. This overwrites the default idleiterations(5).
<strong><span class="auto-style4">cacheadmin
</strong>Usage: hdfs cacheadmin -addDirective -path <path> -pool <pool-name> [-force] [-replication <replication>] [-ttl <time-to-live>]
<strong><span class="auto-style4">crypto</strong>
Usage:
  hdfs crypto -createZone -keyName <keyName> -path <path>
  hdfs crypto -help <command-name>
  hdfs crypto -listZones
<strong><span class="auto-style4">datanode
</strong>Usage: hdfs datanode [-regular | -rollback | -rollingupgrace rollback]
COMMAND_OPTION	Description
-regular	Normal datanode startup (default).
-rollback	Rollback the datanode to the previous version. This should be used after stopping the datanode and distributing the old hadoop version.
-rollingupgraderollback	Rollback a rolling upgrade operation.
<strong><span class="auto-style4">dfsadmin
</strong>Usage:
    hdfs dfsadmin [GENERIC_OPTIONS]
          [-report [-live] [-dead] [-decommissioning]]
          [-safemode enter | leave | get | wait]
          [-saveNamespace]
          [-rollEdits]
          [-restoreFailedStorage true |false |check]
          [-refreshNodes]
          [-setQuota <quota> <dirname>...<dirname>]
          [-clrQuota <dirname>...<dirname>]
          [-setSpaceQuota <quota> <dirname>...<dirname>]
          [-clrSpaceQuota <dirname>...<dirname>]
          [-setStoragePolicy <path> <policyName>]
          [-getStoragePolicy <path>]
          [-finalizeUpgrade]
          [-rollingUpgrade [<query> |<prepare> |<finalize>]]
          [-metasave filename]
          [-refreshServiceAcl]
          [-refreshUserToGroupsMappings]
          [-refreshSuperUserGroupsConfiguration]
          [-refreshCallQueue]
          [-refresh <host:ipc_port> <key> [arg1..argn]]
          [-reconfig <datanode |...> <host:ipc_port> <start |status>]
          [-printTopology]
          [-refreshNamenodes datanodehost:port]
          [-deleteBlockPool datanode-host:port blockpoolId [force]]
          [-setBalancerBandwidth <bandwidth in bytes per second>]
          [-allowSnapshot <snapshotDir>]
          [-disallowSnapshot <snapshotDir>]
          [-fetchImage <local directory>]
          [-shutdownDatanode <datanode_host:ipc_port> [upgrade]]
          [-getDatanodeInfo <datanode_host:ipc_port>]
          [-triggerBlockReport [-incremental] <datanode_host:ipc_port>]
          [-help [cmd]]
-report [-live] [-dead] [-decommissioning]	Reports basic filesystem information and statistics. Optional flags may be used to filter the list of displayed DataNodes.
-safemode enter|leave|get|wait	Safe mode maintenance command. Safe mode is a Namenode state in which it 
1. does not accept changes to the name space (read-only) 
2. does not replicate or delete blocks. 
Safe mode is entered automatically at Namenode startup, and leaves safe mode automatically when the configured minimum percentage of blocks satisfies the minimum replication condition. Safe mode can also be entered manually, but then it can only be turned off manually as well.
-saveNamespace	Save current namespace into storage directories and reset edits log. Requires safe mode.
-rollEdits	Rolls the edit log on the active NameNode.
-restoreFailedStoragetrue|false|check	This option will turn on/off automatic attempt to restore failed storage replicas. If a failed storage becomes available again the system will attempt to restore edits and/or fsimage during checkpoint. ‘check’ option will return current setting.
-refreshNodes	Re-read the hosts and exclude files to update the set of Datanodes that are allowed to connect to the Namenode and those that should be decommissioned or recommissioned.
-setQuota <quota> <dirname>…<dirname>	See HDFS Quotas Guide for the detail.
-clrQuota <dirname>…<dirname>	See HDFS Quotas Guide for the detail.
-setSpaceQuota <quota> <dirname>…<dirname>	See HDFS Quotas Guide for the detail.
-clrSpaceQuota <dirname>…<dirname>	See HDFS Quotas Guide for the detail.
-setStoragePolicy <path> <policyName>	Set a storage policy to a file or a directory.
-getStoragePolicy <path>	Get the storage policy of a file or a directory.
-finalizeUpgrade	Finalize upgrade of HDFS. Datanodes delete their previous version working directories, followed by Namenode doing the same. This completes the upgrade process.
-rollingUpgrade [<query>|<prepare>|<finalize>]	See Rolling Upgrade document for the detail.
-metasave filename	Save Namenode’s primary data structures to filename in the directory specified by hadoop.log.dir property. filename is overwritten if it exists.filename will contain one line for each of the following
1. Datanodes heart beating with Namenode
2. Blocks waiting to be replicated
3. Blocks currently being replicated
4. Blocks waiting to be deleted
-refreshServiceAcl			Reload the service-level authorization policy file.
-refreshUserToGroupsMappings		Refresh user-to-groups mappings.
-refreshSuperUserGroupsConfiguration	Refresh superuser proxy groups mappings
-refreshCallQueue			Reload the call queue from config.
-refresh <host:ipc_port> <key> [arg1..argn]			Triggers a runtime-refresh of the resource specified by <key> on <host:ipc_port>. All other args after are sent to the host.
-reconfig <datanode |…> <host:ipc_port> <start|status>				Start reconfiguration or get the status of an ongoing reconfiguration. The second parameter specifies the node type. Currently, only reloading DataNode’s configuration is supported.
-printTopology			Print a tree of the racks and their nodes as reported by the Namenode
-refreshNamenodes datanodehost:port	For the given datanode, reloads the configuration files, stops serving the removed block-pools and starts serving new block-pools.
-deleteBlockPool datanode-host:port blockpoolId [force]	If force is passed, block pool directory for the given blockpool id on the given datanode is deleted along with its contents, otherwise the directory is deleted only if it is empty. The command will fail if datanode is still serving the block pool. Refer to refreshNamenodes to shutdown a block pool service on a datanode.
-setBalancerBandwidth <bandwidth in bytes per second>		Changes the network bandwidth used by each datanode during HDFS block balancing. <bandwidth> is the maximum number of bytes per second that will be used by each datanode. This value overrides the dfs.balance.bandwidthPerSec parameter. NOTE: The new value is not persistent on the DataNode.
-allowSnapshot <snapshotDir>			Allowing snapshots of a directory to be created. If the operation completes successfully, the directory becomes snapshottable. See the HDFS Snapshot Documentation for more information.
-disallowSnapshot <snapshotDir>			Disallowing snapshots of a directory to be created. All snapshots of the directory must be deleted before disallowing snapshots. See the HDFS Snapshot Documentation for more information.
-fetchImage <local directory>			Downloads the most recent fsimage from the NameNode and saves it in the specified local directory.
-shutdownDatanode<datanode_host:ipc_port> [upgrade]		Submit a shutdown request for the given datanode. See Rolling Upgrade document for the detail.
-getDatanodeInfo<datanode_host:ipc_port>			Get the information about the given datanode. See Rolling Upgrade document for the detail.
-triggerBlockReport [-incremental]<datanode_host:ipc_port>	Trigger a block report for the given datanode. If ‘incremental’ is specified, it will be otherwise, it will be a full block report.
-help [cmd]				Displays help for the given command or all commands if none is specified.
<strong><span class="auto-style4">haadmin</strong>
Usage:
    hdfs haadmin -checkHealth <serviceId>
    hdfs haadmin -failover [--forcefence] [--forceactive] <serviceId> <serviceId>
    hdfs haadmin -getServiceState <serviceId>
    hdfs haadmin -help <command>
    hdfs haadmin -transitionToActive <serviceId> [--forceactive]
    hdfs haadmin -transitionToStandby <serviceId>
-checkHealth	check the health of the given NameNode
-failover	initiate a failover between two NameNodes
-getServiceState	determine whether the given NameNode is Active or Standby
-transitionToActive	transition the state of the given NameNode to Active (Warning: No fencing is done)
-transitionToStandby	transition the state of the given NameNode to Standby (Warning: No fencing is done)
<strong><span class="auto-style4">journalnode</strong>
Usage: hdfs journalnode
<strong><span class="auto-style4">mover</strong>
Usage: hdfs mover [-p <files/dirs> | -f <local file name>]
-f <local file>	Specify a local file containing a list of HDFS files/dirs to migrate.
-p <files/dirs>	Specify a space separated list of HDFS files/dirs to migrate.
<strong><span class="auto-style4">namenode</strong>
Usage:
  hdfs namenode [-backup] |
          [-checkpoint] |
          [-format [-clusterid cid ] [-force] [-nonInteractive] ] |
          [-upgrade [-clusterid cid] [-renameReserved<k-v pairs>] ] |
          [-upgradeOnly [-clusterid cid] [-renameReserved<k-v pairs>] ] |
          [-rollback] |
          [-rollingUpgrade <downgrade |rollback> ] |
          [-finalize] |
          [-importCheckpoint] |
          [-initializeSharedEdits] |
          [-bootstrapStandby] |
          [-recover [-force] ] |
          [-metadataVersion ]
-backup	Start backup node.
-checkpoint	Start checkpoint node.
-format [-clusterid cid] [-force] [-nonInteractive]	Formats the specified NameNode. It starts the NameNode, formats it and then shut it down. -force option formats if the name directory exists. -nonInteractive option aborts if the name directory exists, unless -force option is specified.
-upgrade [-clusterid cid] [-renameReserved <k-v pairs>]		Namenode should be started with upgrade option after the distribution of new Hadoop version.
-upgradeOnly [-clusterid cid][-renameReserved <k-v pairs>]	Upgrade the specified NameNode and then shutdown it.
-rollback					Rollback the NameNode to the previous version. This should be used after stopping the cluster and distributing the old Hadoop version.
-rollingUpgrade<downgrade|rollback|started>				See Rolling Upgrade document for the detail.
-finalize					Finalize will remove the previous state of the files system. Recent upgrade will become permanent. Rollback option will not be available anymore. After finalization it shuts the NameNode down.
-importCheckpoint				Loads image from a checkpoint directory and save it into the current one. Checkpoint dir is read from property fs.checkpoint.dir
-initializeSharedEdits				Format a new shared edits dir and copy in enough edit log segments so that the standby NameNode can start up.
-bootstrapStandby				Allows the standby NameNode’s storage directories to be bootstrapped by copying the latest namespace snapshot from the active NameNode. This is used when first configuring an HA cluster.
-recover [-force]				Recover lost metadata on a corrupt filesystem. See HDFS User Guide for the detail.
-metadataVersion				Verify that configured directories exist, then print the metadata versions of the software and the image.
<strong><span class="auto-style4">nfs3</strong>
Usage: hdfs nfs3
This comamnd starts the NFS3 gateway for use with the HDFS NFS3 Service.
<strong><span class="auto-style4">portmap</strong>
Usage: hdfs portmap
This comamnd starts the RPC portmap for use with the HDFS NFS3 Service.
<strong><span class="auto-style4">secondarynamenode</strong>
Usage: hdfs secondarynamenode [-checkpoint [force]] | [-format] | [-geteditsize]
-checkpoint [force]	Checkpoints the SecondaryNameNode if EditLog size >= fs.checkpoint.size. If force is used, checkpoint irrespective of EditLog size.
-format		Format the local storage during startup.
-geteditsize	Prints the number of uncheckpointed transactions on the NameNode.
<strong><span class="auto-style4">storagepolicies</strong>
Usage: hdfs storagepolicies
<strong><span class="auto-style4">zkfc</strong>
Usage: hdfs zkfc [-formatZK [-force] [-nonInteractive]]
-formatZK	Format the Zookeeper instance
-h	Display help
<strong><span class="auto-style4">verify</strong>
Usage: hdfs debug verify [-meta <metadata-file>] [-block <block-file>]
-block block-file	Optional parameter to specify the absolute path for the block file on the local file system of the data node.
-meta metadata-file	Absolute path for the metadata file on the local file system of the data node.
<strong><span class="auto-style4">recoverLease</strong>
Usage: hdfs debug recoverLease [-path <path>] [-retries <num-retries>]
[-path path]	HDFS path for which to recover the lease.
[-retries num-retries]	Number of times the client will retry calling recoverLease. The default number of retries is 1.
    </pre>

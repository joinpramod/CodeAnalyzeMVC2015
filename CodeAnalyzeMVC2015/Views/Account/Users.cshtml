
@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model CodeAnalyzeMVC2015.Users
@using CodeAnalyzeMVC2015.AppCode


<script src="~/js/JavaScript1.js"></script>
<script type="text/javascript" src="http://www.google.com/recaptcha/api/js/recaptcha_ajax.js"></script>

 @if (Model.Email == null || ViewBag.Ack != null)
 {
<h2>Register</h2><br />
 }
 else
 {
    <h2>Edit Profile</h2><br />    <br />
 }


@using (Html.BeginForm("CreateEditUser", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    if (Model.Email == null || ViewBag.Ack != null)
    {
    <table width="80%">
        <tr>
            <td align="center">
                <script>
                                            //UserProfileFB
                                            (function (d) {
                                                var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
                                                if (d.getElementById(id)) { return; }
                                                js = d.createElement('script'); js.id = id; js.async = true;
                                                js.src = "//connect.facebook.net/en_US/all.js";
                                                ref.parentNode.insertBefore(js, ref);
                                            }(document));
                                            // Init the SDK upon load
                                            window.fbAsyncInit = function () {
                                                FB.init({
                                                    appId: '848792638492356', // Write your own application id
                                                    channelUrl: '//' + window.location.hostname + '/channel', // Path to your Channel File
                                                    scope: 'email,id,name,gender,user_birthday',
                                                    status: false, // check login status
                                                    //cookie: false, // enable cookies to allow the server to access the session
                                                    version: 'v2.5',
                                                    xfbml: true  // parse XFBML
                                                });
                                                // listen for and handle auth.statusChange events
                                                FB.Event.subscribe('auth.statusChange', function (response) {
                                                    //  debugger;
                                                    if (response.authResponse) {
                                                        //  debugger;
                                                        // user has auth'd your app and is logged into Facebook
                                                        var uid = "http://graph.facebook.com/" + response.authResponse.userID + "/picture";
                                                        FB.api('/me', function (me) {
                                                            if (me.name) {
                                                                // debugger;

                                                                var form = document.createElement("form");
                                                                form.setAttribute("method", "post");
                                                                form.setAttribute("action", "/account/viewuser");

                                                                var hfEMail = document.createElement("input");
                                                                hfEMail.setAttribute("type", "hidden");
                                                                hfEMail.setAttribute("name", me.email);
                                                                hfEMail.setAttribute("value", me.email);


                                                                var hfName = document.createElement("input");
                                                                hfName.setAttribute("type", "hidden");
                                                                hfName.setAttribute("name", me.name);
                                                                hfName.setAttribute("value", me.name);


                                                                var hfImageURL = document.createElement("input");
                                                                hfImageURL.setAttribute("type", "hidden");
                                                                hfImageURL.setAttribute("name", me.hfImageURL);
                                                                hfImageURL.setAttribute("value", me.hfImageURL);


                                                                var hfType = document.createElement("input");
                                                                hfType.setAttribute("type", "hidden");
                                                                hfType.setAttribute("name", "Facebook");
                                                                hfType.setAttribute("value", "Facebook");

                                                                form.appendChild(hfEMail);
                                                                form.appendChild(hfName);
                                                                form.appendChild(hfImageURL);
                                                                form.appendChild(hfType);

                                                                document.body.appendChild(form);
                                                                form.submit();

                                                            }
                                                        })
                                                    }
                                                });
                                            }

                </script>

                <fb:login-button size="large" scope="public_profile,email" onlogin="require('./log').info('onlogin callback')">
                    Login with Facebook
                </fb:login-button>
            </td>
            <td align="center">
                <div id="my-signin2"></div>
                <script>
                    function onSuccess(googleUser) {
                        var profile = googleUser.getBasicProfile();
                        //console.log('ID: ' + profile.getId());
                        //console.log('Name: ' + profile.getName());
                        //console.log('Image URL: ' + profile.getImageUrl());
                        //console.log('Email: ' + profile.getEmail());

                        var form = document.createElement("form");
                        form.setAttribute("method", "post");
                        form.setAttribute("action", "/account/viewuser");

                        var hfEMail = document.createElement("input");
                        hfEMail.setAttribute("type", "hidden");
                        hfEMail.setAttribute("name", profile.getEmail());
                        hfEMail.setAttribute("value", profile.getEmail());


                        var hfName = document.createElement("input");
                        hfName.setAttribute("type", "hidden");
                        hfName.setAttribute("name", profile.getName());
                        hfName.setAttribute("value", profile.getName());


                        var hfImageURL = document.createElement("input");
                        hfImageURL.setAttribute("type", "hidden");
                        hfImageURL.setAttribute("name", profile.getImageUrl());
                        hfImageURL.setAttribute("value", profile.getImageUrl());


                        var hfType = document.createElement("input");
                        hfType.setAttribute("type", "hidden");
                        hfType.setAttribute("name", "Google");
                        hfType.setAttribute("value", "Google");

                        form.appendChild(hfEMail);
                        form.appendChild(hfName);
                        form.appendChild(hfImageURL);
                        form.appendChild(hfType);

                        document.body.appendChild(form);
                        form.submit();


                    }

                    function onFailure(error) {
                        alert("Sign in with Google failed. Please try again");
                    }

                    function renderButton() {
                        gapi.signin2.render('my-signin2', {
                            'scope': 'https://www.googleapis.com/auth/plus.login',
                            'width': 170,
                            'height': 30,
                            'longtitle': true,
                            'theme': 'dark',
                            'onsuccess': onSuccess,
                            'onfailure': onFailure
                        });
                    }
                </script>  
            </td>
            <td align="center"></td>
        </tr>
    </table>


    }
                <table style="font-size:16px" width="100%">
                    <tr>
                        <td align="center" style="font-weight: bold; color: red; font-size: 16px">
                            @ViewBag.Ack
                        </td>
                    </tr>
                    <tr>
                        <td align="center" style="padding-top: 5px;">
                            <table style="height: 250px; width: 80%;">
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td align="left" style="font-family: Calibri;">
                                        First Name:
                                    </td>
                                    <td align="left" style="padding-left:10px">
                                        @Html.TextBoxFor(m => m.FirstName, new { style = "border:groove;width:55%;border-width:1px" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" style="font-family:Calibri;">
                                        Last Name
                                    </td>
                                    <td align="left" style="padding-left:10px">
                                        @Html.TextBoxFor(m => m.LastName, new { style = "border:groove;width:55%;border-width:1px" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" style="font-family:Calibri;">
                                        E-Mail:
                                    </td>
                                    <td align="left" style="padding-left:10px">
                                        @Html.TextBoxFor(m => m.Email, new { style = "border:groove;width:75%;border-width:1px" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" style="font-family:Calibri;">
                                       Address:
                                    </td>
                                    <td align="left" style="padding-left: 10px">
                                        @Html.TextBoxFor(m => m.Address, new { style = "border:groove;width:75%;border-width:1px" })
                                    </td>
                                </tr>
                               @if (Model.Email == null || ViewBag.Ack != null)
                                {
                                <tr>
                                    <td align="left" style="font-family:Calibri;">
                                        Password:
                                    </td>
                                    <td align="left" style="padding-left:10px">
                                        <input type="password" id="txtPassword" style="border:groove;width:55%;border-width:1px"/>
                                        @*@Html.Password("txtPassword", new { style = "border:groove;width:55%;border-width:1px" })*@
                                    </td>
                                </tr>

                                <tr>
                                    <td align="left" style="font-family: Calibri;">
                                        Confirm Password:
                                    </td>
                                    <td align="left" style="padding-left:10px">
                                        <input type="password" id="txtConfirmPassword" style="border:groove;width:55%;border-width:1px" />
                                        @*@Html.Password("txtConfirmPassword", new { style = "border:groove;width:55%;border-width:1px" })*@
                                    </td>
                                </tr>
                                }

                                <tr>
                                    <td align="left" style="font-family:Calibri;">
                                       Upload Photo:
                                    </td>
                                    <td align="left" style="padding-left:10px">
                                        <input type="file" style="width: 50%" id="fileUserPhoto" name="fileUserPhoto" />
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" colspan="2" style="font-family: Calibri;">
                                        Brief details on your experience, work and expertiece
                                        <br />
                                        @Html.TextAreaFor(m => m.Details, new { style = "border:groove;width:75%;border-width:1px;height:80px;width:90%" })
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2" align="center">
                                        <img id="imgcaptcha" alternatetext="Captcha" />
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2" align="center">
                                        @if (Model.Email == null || ViewBag.Ack != null)
                                        {
                                            @Html.GenerateCaptcha(Theme.White)
                                        }
                                    </td>
                                </tr>

                                <tr>
                                    <td colspan="2">&nbsp;</td>
                                </tr>
                                <tr>
                                    <td align="center" colspan="2">
                                        <input type="submit" id="btnRegister" value="Submit" onclick="return ValidateUserReg()" style="border:none;background-color:#4fa4d5;color:white;font-size:16px" />
                                        <input type="submit" id="btnCancel" name="Cancel" value="Cancel" style="border:none;background-color:#4fa4d5;color:white;font-size:16px" />

                                    </td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                            </table>
                        </td>

                    </tr>
                </table>

                @*@Html.Hidden("hfUserEMail", (object)ViewBag.UserEMail)*@
}
